{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/news-app/src/Components/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = useCallback(async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(30);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  }, [page, props]);\n  useEffect(() => {\n    let isMounted = true; // Flag to check if the component is mounted\n\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsPanda`;\n    const fetchData = async () => {\n      props.setProgress(10);\n      const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n      try {\n        const data = await fetch(url);\n        props.setProgress(30);\n        const parsedData = await data.json();\n        props.setProgress(70);\n        if (isMounted) {\n          setArticles(parsedData.articles);\n          setTotalResults(parsedData.totalResults);\n          setLoading(false);\n          props.setProgress(100);\n        }\n      } catch (error) {\n        // Handle errors here\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n\n    // Cleanup function to cancel ongoing requests and avoid memory leaks\n    return () => {\n      isMounted = false; // Set the flag to false when unmounting\n    };\n  }, [page, props]);\n\n  // Rest of your code...\n\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `text-center text-${props.color}`,\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                color: props.color,\n                bgcolor: props.bgdrill,\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"Ra4j8/lksF8nFVQcIq3VIoL626I=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","NewsItem","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","isMounted","document","title","fetchData","error","console","fetchMoreData","concat","children","className","color","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","bgcolor","bgdrill","description","imageUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","number","$RefreshReg$"],"sources":["/Users/abhinav/Desktop/news-app/src/Components/News.js"],"sourcesContent":["import React, {useEffect, useState,useCallback} from 'react'\n\nimport NewsItem from './NewsItem'\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst News = (props)=>{\n    const [articles, setArticles] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [totalResults, setTotalResults] = useState(0)\n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    } \n\n    const updateNews = useCallback(async () => {\n        props.setProgress(10);\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n        setLoading(true);\n        let data = await fetch(url);\n        props.setProgress(30);\n        let parsedData = await data.json();\n        props.setProgress(70);\n        setArticles(parsedData.articles);\n        setTotalResults(parsedData.totalResults);\n        setLoading(false);\n        props.setProgress(100);\n        \n    }, [page,props]);\n\n\n    useEffect(() => {\n        let isMounted = true; // Flag to check if the component is mounted\n      \n        document.title = `${capitalizeFirstLetter(props.category)} - NewsPanda`;\n      \n        const fetchData = async () => {\n          props.setProgress(10);\n          const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n          \n          try {\n            const data = await fetch(url);\n            props.setProgress(30);\n            const parsedData = await data.json();\n            props.setProgress(70);\n            \n            if (isMounted) {\n              setArticles(parsedData.articles);\n              setTotalResults(parsedData.totalResults);\n              setLoading(false);\n              props.setProgress(100);\n            }\n          } catch (error) {\n            // Handle errors here\n            console.error('Error fetching data:', error);\n          }\n        };\n      \n        fetchData();\n      \n        // Cleanup function to cancel ongoing requests and avoid memory leaks\n        return () => {\n          isMounted = false; // Set the flag to false when unmounting\n        };\n      }, [page, props]);\n      \n      // Rest of your code...\n      \n\n\n    const fetchMoreData = async () => {   \n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\n        setPage(page+1) \n        let data = await fetch(url);\n        let parsedData = await data.json()\n        setArticles(articles.concat(parsedData.articles))\n        setTotalResults(parsedData.totalResults)\n      };\n \n        return (\n            <>\n                <h1 className={`text-center text-${props.color}`} style={{ margin: '35px 0px', marginTop: '90px' }}>Top {capitalizeFirstLetter(props.category)} Headlines</h1>\n                {loading && <Spinner />}\n                <InfiniteScroll\n                    dataLength={articles.length}\n                    next={fetchMoreData}\n                    hasMore={articles.length !== totalResults}\n                    loader={<Spinner/>}\n                > \n                    <div className=\"container\">\n                    <div className=\"row\">\n                        {articles.map((element) => {\n                            return <div className=\"col-md-4\" key={element.url}>\n                                <NewsItem color={props.color} bgcolor={props.bgdrill} title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\n                            </div>\n                        })}\n                    </div>\n                    </div> \n                </InfiniteScroll>\n            </>\n        )\n    \n}\n\n\nNews.defaultProps = {\n    country: 'in',\n    pageSize: 8,\n    category: 'general',\n}\n\nNews.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string,\n}\n\nexport default News"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}